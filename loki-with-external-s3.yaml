loki:
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 4
  pattern_ingester:
    enabled: true
  ruler:
    enable_api: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 24h # Retentions 1 days
  compactor:
    compaction_interval: 10m
    retention_enabled: true
    retention_delete_delay: 2h
    delete_request_store: s3
  storage:
    bucketNames:
      chunks: chunks
      ruler: chunks
      admin: chunks
    type: s3
    s3:
      s3: http://10.111.0.128:80
      endpoint: http://10.111.0.128:80
      region: null
      secretAccessKey: jsJAQBPdHWJ9VdNMaiOHArb58VFh5zVj
      accessKeyId: i7mqQVEQACPgAOw8
      signatureVersion: null
      s3ForcePathStyle: true
      insecure: true
    use_thanos_objstore: false
    object_store:
      # Type of object store. Valid options are: s3, gcs, azure
      type: s3
      prefix: null  # Optional prefix for storage keys

      # S3 configuration (when type is "s3")
      s3:
        endpoint: http://10.111.0.128:80     # S3 endpoint URL
        region: null       # Optional region
        access_key_id: i7mqQVEQACPgAOw8      # Optional access key
        secret_access_key: jsJAQBPdHWJ9VdNMaiOHArb58VFh5zVj  # Optional secret key
        insecure: true  

global:
  dnsService: "coredns"
  
deploymentMode: SimpleScalable

backend:
  replicas: 3
  persistence:
    size: 5Gi
    # storageClass: "openebs-data-shared"
read:
  replicas: 3
  persistence:
    # -- Enable StatefulSetAutoDeletePVC feature
    enableStatefulSetAutoDeletePVC: true
    # -- Size of persistent disk
    size: 10Gi
    # -- Storage class to be used.
    # If defined, storageClassName: <storageClass>.
    # If set to "-", storageClassName: "", which disables dynamic provisioning.
    # If empty or set to null, no storageClassName spec is
    # set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).
    # storageClass: "openebs-data-shared"
write:
  replicas: 3 # To ensure data durability with replication
  persistence:
    # -- Enable volume claims in pod spec
    volumeClaimsEnabled: true
    # -- Parameters used for the `data` volume when volumeClaimEnabled if false
    dataVolumeParameters:
      emptyDir: {}
    # -- Enable StatefulSetAutoDeletePVC feature
    enableStatefulSetAutoDeletePVC: false
    # -- Size of persistent disk
    size: 10Gi
    # -- Storage class to be used.
    # If defined, storageClassName: <storageClass>.
    # If set to "-", storageClassName: "", which disables dynamic provisioning.
    # If empty or set to null, no storageClassName spec is
    # set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).
    # storageClass: "openebs-data-shared"

gateway:
  enabled: true
  replicas: 3
  service:
    type: NodePort
# gateway:
#  ingress:
#    enabled: true
#    hosts:
#      - host: loki.example.com
#        paths:
#          - path: /
#            pathType: Prefix

# Enable minio for storage
minio:
  enabled: false